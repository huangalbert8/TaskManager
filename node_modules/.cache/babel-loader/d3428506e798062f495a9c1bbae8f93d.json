{"ast":null,"code":"var _jsxFileName = \"/Users/alberthuang/Desktop/task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\n// is not html but jsx(javascript extension)\nimport Header from \"./components/Header\";\nimport AddTask from \"./components/AddTask\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Tasks from \"./components/Tasks\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport CompletedTasks from \"./components/CompletedTasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [showShortTasks, setShowShortTasks] = useState(false);\n  const [showLongTasks, setShowLongTasks] = useState(false);\n  const [showAppointments, setShowAppointments] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // dependancy array\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:7000/tasks\");\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:7000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; // const addTask = (task) => {\n  //   const id = Math.floor(Math.random() * 10000) + 1;\n  //   console.log(id);\n  //   const newTask = { id, ...task }; // ...task return the text, day, and reminder of the task passed as arg\n  //   setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n  // };\n\n\n  const addTask = async task => {\n    task.completion = \"in progress\";\n    const res = await fetch(\"http://localhost:7000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // sets tasks to an array with old tasks and new task\n  }; // const deleteTask = (id) => {\n  //   setTasks(tasks.filter((task) => task.id !== id));\n  // };\n\n\n  const deleteTask = async id => {\n    const taskToDelete = await fetchTask(id);\n    const updTask = { ...taskToDelete,\n      completion: \"deleted\"\n    };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      completion: data.completion\n    } : task));\n  };\n\n  const completeTask = async id => {\n    const taskToDelete = await fetchTask(id);\n    const updTask = { ...taskToDelete,\n      completion: \"deleted\"\n    };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      completion: data.completion\n    } : task));\n  }; //Reminder\n\n\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: data.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            onDelete: deleteTask,\n            onToggle: toggleReminder,\n            onShow: () => setShowShortTasks(!showShortTasks),\n            showShort: showShortTasks,\n            onComplete: completeTask,\n            type: \"short\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            onDelete: deleteTask,\n            onToggle: toggleReminder,\n            onShow: () => setShowLongTasks(!showLongTasks),\n            showShort: showLongTasks,\n            onComplete: completeTask,\n            type: \"long\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            onDelete: deleteTask,\n            onToggle: toggleReminder,\n            onShow: () => setShowAppointments(!showAppointments),\n            showShort: showAppointments,\n            onComplete: completeTask,\n            type: \"appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"./completedTasks\",\n        component: CompletedTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"./completedTasks\",\n        class: \"button\",\n        children: \"View Completed Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"n81ZdgBSMG6DcfGqEXlYzPeJAn4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alberthuang/Desktop/task-tracker/src/App.js"],"names":["Header","AddTask","React","useState","useEffect","Tasks","BrowserRouter","Router","Route","CompletedTasks","App","showAddTask","setShowAddTask","showShortTasks","setShowShortTasks","showLongTasks","setShowLongTasks","showAppointments","setShowAppointments","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","completion","method","headers","body","JSON","stringify","deleteTask","taskToDelete","updTask","map","completeTask","toggleReminder","taskToToggle","reminder","props"],"mappings":"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","sourcesContent":["// is not html but jsx(javascript extension)\nimport Header from \"./components/Header\";\nimport AddTask from \"./components/AddTask\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Tasks from \"./components/Tasks\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport CompletedTasks from \"./components/CompletedTasks\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [showShortTasks, setShowShortTasks] = useState(false);\n  const [showLongTasks, setShowLongTasks] = useState(false);\n  const [showAppointments, setShowAppointments] = useState(false);\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []); // dependancy array\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:7000/tasks\");\n    const data = await res.json();\n    return data;\n  };\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:7000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  // const addTask = (task) => {\n  //   const id = Math.floor(Math.random() * 10000) + 1;\n  //   console.log(id);\n  //   const newTask = { id, ...task }; // ...task return the text, day, and reminder of the task passed as arg\n  //   setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n  // };\n\n  const addTask = async (task) => {\n    task.completion = \"in progress\";\n    const res = await fetch(\"http://localhost:7000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // sets tasks to an array with old tasks and new task\n  };\n\n  // const deleteTask = (id) => {\n  //   setTasks(tasks.filter((task) => task.id !== id));\n  // };\n  const deleteTask = async (id) => {\n    const taskToDelete = await fetchTask(id);\n    const updTask = { ...taskToDelete, completion: \"deleted\" };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completion: data.completion } : task\n      )\n    );\n  };\n  const completeTask = async (id) => {\n    const taskToDelete = await fetchTask(id);\n    const updTask = { ...taskToDelete, completion: \"deleted\" };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completion: data.completion } : task\n      )\n    );\n  };\n\n  //Reminder\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        {showAddTask && <AddTask onAdd={addTask} />}\n        {/* {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks\"\n      )} */}\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <>\n              <Tasks\n                tasks={tasks}\n                onDelete={deleteTask}\n                onToggle={toggleReminder}\n                onShow={() => setShowShortTasks(!showShortTasks)}\n                showShort={showShortTasks}\n                onComplete={completeTask}\n                type={\"short\"}\n              />\n              <Tasks\n                tasks={tasks}\n                onDelete={deleteTask}\n                onToggle={toggleReminder}\n                onShow={() => setShowLongTasks(!showLongTasks)}\n                showShort={showLongTasks}\n                onComplete={completeTask}\n                type={\"long\"}\n              />\n              <Tasks\n                tasks={tasks}\n                onDelete={deleteTask}\n                onToggle={toggleReminder}\n                onShow={() => setShowAppointments(!showAppointments)}\n                showShort={showAppointments}\n                onComplete={completeTask}\n                type={\"appointment\"}\n              />\n            </>\n          )}\n        />\n        {/* <Tasks\n          tasks={tasks}\n          onDelete={deleteTask}\n          onToggle={toggleReminder}\n          onShow={() => setShowShortTasks(!showShortTasks)}\n          showShort={showShortTasks}\n          onComplete={completeTask}\n          type={\"short\"}\n        />\n        <Tasks\n          tasks={tasks}\n          onDelete={deleteTask}\n          onToggle={toggleReminder}\n          onShow={() => setShowLongTasks(!showLongTasks)}\n          showShort={showLongTasks}\n          onComplete={completeTask}\n          type={\"long\"}\n        />\n        <Tasks\n          tasks={tasks}\n          onDelete={deleteTask}\n          onToggle={toggleReminder}\n          onShow={() => setShowAppointments(!showAppointments)}\n          showShort={showAppointments}\n          onComplete={completeTask}\n          type={\"appointment\"}\n        /> */}\n        <Route path=\"./completedTasks\" component={CompletedTasks}></Route>\n        <a href=\"./completedTasks\" class=\"button\">\n          View Completed Tasks\n        </a>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alberthuang/Desktop/task-tracker/src/components/Tasks.js\";\nimport Task from \"./Task\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = ({\n  tasks,\n  onDelete,\n  onToggle,\n  showShort,\n  onShow,\n  onComplete,\n  type\n}) => {\n  let color = \"\";\n  let title = \"\";\n  let textColor = \"black\";\n  tasks = tasks.filter(task => task.type === type && task.completion === \"in progress\");\n\n  switch (type) {\n    case \"long\":\n      color = \"pink\";\n      title = \"Less Urgent Tasks\";\n      break;\n\n    case \"short\":\n      color = \"red\";\n      title = \"Urgent Tasks\";\n      break;\n\n    case \"appointment\":\n      color = \"aquamarine\";\n      title = \"Appointments\";\n      break;\n\n    default:\n      color = \"beige\";\n      title = type;\n    // textColor = \"white\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: type,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            onClick: onShow,\n            style: {\n              background: color,\n              color: textColor\n            },\n            children: [title, showShort ? /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/_jsxDEV(FaArrowDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), tasks.length > 0 ? tasks.map((task, index) => showShort && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task.id,\n              index: index,\n              children: [\" \", provided => {\n                /*#__PURE__*/\n                _jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  children: /*#__PURE__*/_jsxDEV(Task, {\n                    task: task,\n                    onDelete: onDelete,\n                    onToggle: onToggle,\n                    onComplete: onComplete\n                  }, task.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 31\n                }, this);\n              }]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)) : showShort && /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginLeft: \"30px\"\n            },\n            children: \"No Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/alberthuang/Desktop/task-tracker/src/components/Tasks.js"],"names":["Task","FaArrowUp","FaArrowDown","DragDropContext","Droppable","Draggable","Tasks","tasks","onDelete","onToggle","showShort","onShow","onComplete","type","color","title","textColor","filter","task","completion","provided","droppableProps","innerRef","background","length","map","index","id","draggableProps","dragHandleProps","marginLeft"],"mappings":"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","sourcesContent":["import Task from \"./Task\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst Tasks = ({\n  tasks,\n  onDelete,\n  onToggle,\n  showShort,\n  onShow,\n  onComplete,\n  type,\n}) => {\n  let color = \"\";\n  let title = \"\";\n  let textColor = \"black\";\n  tasks = tasks.filter(\n    (task) => task.type === type && task.completion === \"in progress\"\n  );\n  switch (type) {\n    case \"long\":\n      color = \"pink\";\n      title = \"Less Urgent Tasks\";\n      break;\n    case \"short\":\n      color = \"red\";\n      title = \"Urgent Tasks\";\n      break;\n    case \"appointment\":\n      color = \"aquamarine\";\n      title = \"Appointments\";\n      break;\n    default:\n      color = \"beige\";\n      title = type;\n    // textColor = \"white\";\n  }\n  return (\n    <DragDropContext>\n      <div>\n        <Droppable droppableId={type}>\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              <h2\n                onClick={onShow}\n                style={{ background: color, color: textColor }}\n              >\n                {title}\n                {showShort ? <FaArrowUp /> : <FaArrowDown />}\n              </h2>\n\n              {tasks.length > 0\n                ? tasks.map(\n                    (task, index) =>\n                      showShort && (\n                        <div>\n                          <Draggable\n                            key={task.id}\n                            draggableId={task.id}\n                            index={index}\n                          >\n                            {\" \"}\n                            {(provided) => {\n                              <div\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                              >\n                                <Task\n                                  key={task.id}\n                                  task={task}\n                                  onDelete={onDelete}\n                                  onToggle={onToggle}\n                                  onComplete={onComplete}\n                                ></Task>\n                              </div>;\n                            }}\n                          </Draggable>\n                        </div>\n                      )\n                  )\n                : showShort && <h3 style={{ marginLeft: \"30px\" }}>No Tasks</h3>}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    </DragDropContext>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}
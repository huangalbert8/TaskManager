{"ast":null,"code":"var _jsxFileName = \"/Users/alberthuang/Desktop/task-tracker/src/components/Tasks.js\";\nimport Task from \"./Task\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = ({\n  tasks,\n  onDelete,\n  onToggle,\n  showShort,\n  onShow,\n  onComplete,\n  type\n}) => {\n  let color = \"\";\n  let title = \"\";\n\n  switch (type) {\n    case \"long\":\n      color = \"pink\";\n      title = \"Less Urgent Tasks\";\n      break;\n\n    case \"short\":\n      color = \"red\";\n      title = \"Urgent Tasks\";\n      break;\n\n    case \"appointment\":\n      color = \"aquamarine\";\n      title = \"Appointments\";\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(color), /*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: onShow,\n      style: {\n        background: color\n      },\n      children: [title, showShort ? /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(FaArrowDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), tasks.map(task => task.type === type && task.completion === \"in progress\" && showShort && /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onDelete: onDelete,\n      onToggle: onToggle,\n      onshow: onShow,\n      onComplete: onComplete\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/alberthuang/Desktop/task-tracker/src/components/Tasks.js"],"names":["Task","FaArrowUp","FaArrowDown","Tasks","tasks","onDelete","onToggle","showShort","onShow","onComplete","type","color","title","console","log","background","map","task","completion","id"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,gBAAvC;;;;AACA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,KADa;AAEbC,EAAAA,QAFa;AAGbC,EAAAA,QAHa;AAIbC,EAAAA,SAJa;AAKbC,EAAAA,MALa;AAMbC,EAAAA,UANa;AAObC,EAAAA;AAPa,CAAD,KAQR;AACJ,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,UAAQF,IAAR;AACE,SAAK,MAAL;AACEC,MAAAA,KAAK,GAAG,MAAR;AACAC,MAAAA,KAAK,GAAG,mBAAR;AACA;;AACF,SAAK,OAAL;AACED,MAAAA,KAAK,GAAG,KAAR;AACAC,MAAAA,KAAK,GAAG,cAAR;AACA;;AACF,SAAK,aAAL;AACED,MAAAA,KAAK,GAAG,YAAR;AACAC,MAAAA,KAAK,GAAG,cAAR;AACA;AAZJ;;AAcA,sBACE;AAAA,eACGC,OAAO,CAACC,GAAR,CAAYH,KAAZ,CADH,eAEE;AAAI,MAAA,OAAO,EAAEH,MAAb;AAAqB,MAAA,KAAK,EAAE;AAAEO,QAAAA,UAAU,EAAEJ;AAAd,OAA5B;AAAA,iBACGC,KADH,EAEGL,SAAS,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAmB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAF/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAMGH,KAAK,CAACY,GAAN,CACEC,IAAD,IACEA,IAAI,CAACP,IAAL,KAAcA,IAAd,IACAO,IAAI,CAACC,UAAL,KAAoB,aADpB,IAEAX,SAFA,iBAGE,QAAC,IAAD;AAEE,MAAA,IAAI,EAAEU,IAFR;AAGE,MAAA,QAAQ,EAAEZ,QAHZ;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,MAAM,EAAEE,MALV;AAME,MAAA,UAAU,EAAEC;AANd,OACOQ,IAAI,CAACE,EADZ;AAAA;AAAA;AAAA;AAAA,YALL,CANH;AAAA,kBADF;AAwBD,CAjDD;;KAAMhB,K;AAmDN,eAAeA,KAAf","sourcesContent":["import Task from \"./Task\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\nconst Tasks = ({\n  tasks,\n  onDelete,\n  onToggle,\n  showShort,\n  onShow,\n  onComplete,\n  type,\n}) => {\n  let color = \"\";\n  let title = \"\";\n  switch (type) {\n    case \"long\":\n      color = \"pink\";\n      title = \"Less Urgent Tasks\";\n      break;\n    case \"short\":\n      color = \"red\";\n      title = \"Urgent Tasks\";\n      break;\n    case \"appointment\":\n      color = \"aquamarine\";\n      title = \"Appointments\";\n      break;\n  }\n  return (\n    <>\n      {console.log(color)}\n      <h2 onClick={onShow} style={{ background: color }}>\n        {title}\n        {showShort ? <FaArrowUp /> : <FaArrowDown />}\n      </h2>\n      {tasks.map(\n        (task) =>\n          task.type === type &&\n          task.completion === \"in progress\" &&\n          showShort && (\n            <Task\n              key={task.id}\n              task={task}\n              onDelete={onDelete}\n              onToggle={onToggle}\n              onshow={onShow}\n              onComplete={onComplete}\n            ></Task>\n          )\n      )}\n    </>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}
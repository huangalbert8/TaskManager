{"ast":null,"code":"import _toConsumableArray from\"/Users/alberthuang/Desktop/task-tracker/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/alberthuang/Desktop/task-tracker/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/alberthuang/Desktop/task-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// is not html but jsx(javascript extension)\nimport Header from\"./components/Header\";import Tasks from\"./components/Tasks\";import AddTask from\"./components/AddTask\";import React from\"react\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAddTask=_useState2[0],setShowAddTask=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];// const addTask = (task) => {\n//   const id = Math.floor(Math.random() * 10000) + 1;\n//   console.log(id);\n//   const newTask = { id, ...task }; // ...task return the text, day, and reminder of the task passed as arg\n//   setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n// };\nvar addTask=function addTask(task){var id=Math.floor(Math.random()*10000)+1;console.log(id);var newTask=_objectSpread({id:id},task);// ...task return the text, day, and reminder of the task passed as arg\nsetTasks([].concat(_toConsumableArray(tasks),[newTask]));// sets tasks to an array with old tasks and new task\n};var deleteTask=function deleteTask(id){setTasks(tasks.filter(function(task){return task.id!==id;}));};//Reminder\nvar toggleReminder=function toggleReminder(id){setTasks(tasks.map(function(task){return task.id===id?_objectSpread(_objectSpread({},task),{},{reminder:!task.reminder}):task;}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{onAdd:function onAdd(){return setShowAddTask(!showAddTask);},showAdd:showAddTask}),showAddTask&&/*#__PURE__*/_jsx(AddTask,{onAdd:addTask}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:deleteTask,onToggle:toggleReminder}):\"No Tasks\"]});};export default App;","map":{"version":3,"sources":["/Users/alberthuang/Desktop/task-tracker/src/App.js"],"names":["Header","Tasks","AddTask","React","useState","App","showAddTask","setShowAddTask","tasks","setTasks","addTask","task","id","Math","floor","random","console","log","newTask","deleteTask","filter","toggleReminder","map","reminder","length"],"mappings":"qXAAA;AACA,MAAOA,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,cAAsCD,QAAQ,CAAC,KAAD,CAA9C,wCAAOE,WAAP,eAAoBC,cAApB,eACA,eAA0BH,QAAQ,CAAC,EAAD,CAAlC,yCAAOI,KAAP,eAAcC,QAAd,eAEA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAU,CACxB,GAAMC,CAAAA,EAAE,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,KAA3B,EAAoC,CAA/C,CACAC,OAAO,CAACC,GAAR,CAAYL,EAAZ,EACA,GAAMM,CAAAA,OAAO,gBAAKN,EAAE,CAAFA,EAAL,EAAYD,IAAZ,CAAb,CAAiC;AACjCF,QAAQ,8BAAKD,KAAL,GAAYU,OAAZ,GAAR,CAA+B;AAChC,CALD,CAOA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACP,EAAD,CAAQ,CACzBH,QAAQ,CAACD,KAAK,CAACY,MAAN,CAAa,SAACT,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYA,EAAtB,EAAb,CAAD,CAAR,CACD,CAFD,CAIA;AAEA,GAAMS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACT,EAAD,CAAQ,CAC7BH,QAAQ,CACND,KAAK,CAACc,GAAN,CAAU,SAACX,IAAD,QACRA,CAAAA,IAAI,CAACC,EAAL,GAAYA,EAAZ,gCAAsBD,IAAtB,MAA4BY,QAAQ,CAAE,CAACZ,IAAI,CAACY,QAA5C,GAAyDZ,IADjD,EAAV,CADM,CAAR,CAKD,CAND,CAOA,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,KAAC,MAAD,EACE,KAAK,CAAE,uBAAMJ,CAAAA,cAAc,CAAC,CAACD,WAAF,CAApB,EADT,CAEE,OAAO,CAAEA,WAFX,EADF,CAKGA,WAAW,eAAI,KAAC,OAAD,EAAS,KAAK,CAAEI,OAAhB,EALlB,CAMGF,KAAK,CAACgB,MAAN,CAAe,CAAf,cACC,KAAC,KAAD,EAAO,KAAK,CAAEhB,KAAd,CAAqB,QAAQ,CAAEW,UAA/B,CAA2C,QAAQ,CAAEE,cAArD,EADD,CAGC,UATJ,GADF,CAcD,CA7CD,CA+CA,cAAehB,CAAAA,GAAf","sourcesContent":["// is not html but jsx(javascript extension)\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  // const addTask = (task) => {\n  //   const id = Math.floor(Math.random() * 10000) + 1;\n  //   console.log(id);\n  //   const newTask = { id, ...task }; // ...task return the text, day, and reminder of the task passed as arg\n  //   setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n  // };\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    console.log(id);\n    const newTask = { id, ...task }; // ...task return the text, day, and reminder of the task passed as arg\n    setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n  };\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //Reminder\n\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
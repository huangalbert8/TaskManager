{"ast":null,"code":"var _jsxFileName = \"/Users/alberthuang/Desktop/task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\n// is not html but jsx(javascript extension)\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Doc\",\n    day: \"9.10.2010\",\n    reminder: true\n  }, {\n    id: 2,\n    text: \"Dog\",\n    day: \"9.10.2010\",\n    reminder: true\n  }, {\n    id: 3,\n    text: \"Mom\",\n    day: \"9.10.2010\",\n    reminder: false\n  }]);\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    console.log(id);\n    const newTask = {\n      id,\n      ...task\n    }; // ...task return the text, day, and reminder of the task passed as arg\n\n    setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n  };\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }, this), console.log(showAddTask), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : \"No Tasks\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"WYCARV72/7t23rKaHjhEN+GA65c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alberthuang/Desktop/task-tracker/src/App.js"],"names":["Header","Tasks","AddTask","React","useState","App","showAddTask","setShowAddTask","tasks","setTasks","id","text","day","reminder","addTask","task","Math","floor","random","console","log","newTask","deleteTask","filter","toggleReminder","map","length"],"mappings":";;;AAAA;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CACjC;AACEM,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,GAAG,EAAE,WAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADiC,EAOjC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,GAAG,EAAE,WAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAPiC,EAajC;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,GAAG,EAAE,WAHP;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAbiC,CAAD,CAAlC;;AAqBA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAML,EAAE,GAAGM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,EAAZ;AACA,UAAMW,OAAO,GAAG;AAAEX,MAAAA,EAAF;AAAM,SAAGK;AAAT,KAAhB,CAHwB,CAGS;;AACjCN,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWa,OAAX,CAAD,CAAR,CAJwB,CAIO;AAChC,GALD;;AAOA,QAAMC,UAAU,GAAIZ,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACe,MAAN,CAAcR,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CA9BgB,CAkChB;;;AAEA,QAAMc,cAAc,GAAId,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CACND,KAAK,CAACiB,GAAN,CAAWV,IAAD,IACRA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGK,IAAL;AAAWF,MAAAA,QAAQ,EAAE,CAACE,IAAI,CAACF;AAA3B,KAAjB,GAAyDE,IAD3D,CADM,CAAR;AAKD,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMR,cAAc,CAAC,CAACD,WAAF;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEQ;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFlB,EAGGK,OAAO,CAACC,GAAR,CAAYd,WAAZ,CAHH,EAIGE,KAAK,CAACkB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAElB,KAAd;AAAqB,MAAA,QAAQ,EAAEc,UAA/B;AAA2C,MAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YADD,GAGC,UAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvDD;;GAAMnB,G;;KAAAA,G;AAyDN,eAAeA,GAAf","sourcesContent":["// is not html but jsx(javascript extension)\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doc\",\n      day: \"9.10.2010\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Dog\",\n      day: \"9.10.2010\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Mom\",\n      day: \"9.10.2010\",\n      reminder: false,\n    },\n  ]);\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    console.log(id);\n    const newTask = { id, ...task }; // ...task return the text, day, and reminder of the task passed as arg\n    setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n  };\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //Reminder\n\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {console.log(showAddTask)}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
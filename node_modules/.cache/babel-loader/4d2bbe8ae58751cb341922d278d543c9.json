{"ast":null,"code":"var _jsxFileName = \"/Users/alberthuang/Desktop/task-tracker/src/components/Tasks.js\";\nimport Task from \"./Task\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = ({\n  tasks,\n  onDelete,\n  onToggle,\n  showShort,\n  onShow,\n  onComplete,\n  type\n}) => {\n  let color = \"\";\n  let title = \"\";\n  let textColor = \"black\";\n  tasks = tasks.filter(task => task.type === type && task.completion === \"in progress\");\n\n  switch (type) {\n    case \"long\":\n      color = \"pink\";\n      title = \"Less Urgent Tasks\";\n      break;\n\n    case \"short\":\n      color = \"red\";\n      title = \"Urgent Tasks\";\n      break;\n\n    case \"appointment\":\n      color = \"aquamarine\";\n      title = \"Appointments\";\n      break;\n\n    default:\n      color = \"beige\";\n      title = type;\n    // textColor = \"white\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: type,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: onShow,\n          style: {\n            background: color,\n            color: textColor\n          },\n          children: [title, showShort ? /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(FaArrowDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), tasks.length > 0 ? tasks.map(({\n          task\n        }, index) => showShort && /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: task.id,\n          index: index,\n          children: [\" \", provided => /*#__PURE__*/_jsxDEV(\"li\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: /*#__PURE__*/_jsxDEV(Task, {\n              task: task,\n              onDelete: onDelete,\n              onToggle: onToggle,\n              onComplete: onComplete\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 27\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }, this)) : showShort && /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginLeft: \"30px\"\n          },\n          children: \"No Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/alberthuang/Desktop/task-tracker/src/components/Tasks.js"],"names":["Task","FaArrowUp","FaArrowDown","DragDropContext","Droppable","Draggable","Tasks","tasks","onDelete","onToggle","showShort","onShow","onComplete","type","color","title","textColor","filter","task","completion","provided","droppableProps","innerRef","background","length","map","index","id","draggableProps","dragHandleProps","marginLeft"],"mappings":"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","sourcesContent":["import Task from \"./Task\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst Tasks = ({\n  tasks,\n  onDelete,\n  onToggle,\n  showShort,\n  onShow,\n  onComplete,\n  type,\n}) => {\n  let color = \"\";\n  let title = \"\";\n  let textColor = \"black\";\n  tasks = tasks.filter(\n    (task) => task.type === type && task.completion === \"in progress\"\n  );\n  switch (type) {\n    case \"long\":\n      color = \"pink\";\n      title = \"Less Urgent Tasks\";\n      break;\n    case \"short\":\n      color = \"red\";\n      title = \"Urgent Tasks\";\n      break;\n    case \"appointment\":\n      color = \"aquamarine\";\n      title = \"Appointments\";\n      break;\n    default:\n      color = \"beige\";\n      title = type;\n    // textColor = \"white\";\n  }\n  return (\n    <DragDropContext>\n      <Droppable droppableId={type}>\n        {(provided) => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            <h2\n              onClick={onShow}\n              style={{ background: color, color: textColor }}\n            >\n              {title}\n              {showShort ? <FaArrowUp /> : <FaArrowDown />}\n            </h2>\n\n            {tasks.length > 0\n              ? tasks.map(\n                  ({ task }, index) =>\n                    showShort && (\n                      <Draggable\n                        key={task.id}\n                        draggableId={task.id}\n                        index={index}\n                      >\n                        {\" \"}\n                        {(provided) => (\n                          <li\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <Task\n                              key={task.id}\n                              task={task}\n                              onDelete={onDelete}\n                              onToggle={onToggle}\n                              onComplete={onComplete}\n                            ></Task>\n                          </li>\n                        )}\n                      </Draggable>\n                    )\n                )\n              : showShort && <h3 style={{ marginLeft: \"30px\" }}>No Tasks</h3>}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alberthuang/Desktop/task-tracker/src/components/Tasks.js\";\nimport Task from \"./Task\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tasks = ({\n  tasks,\n  onDelete,\n  onToggle,\n  showShort,\n  onShow,\n  onComplete,\n  type\n}) => {\n  let color = \"\";\n  let title = \"\";\n  let textColor = \"black\";\n  tasks = tasks.filter(task => task.type === type && task.completion === \"in progress\");\n\n  switch (type) {\n    case \"long\":\n      color = \"pink\";\n      title = \"Less Urgent Tasks\";\n      break;\n\n    case \"short\":\n      color = \"red\";\n      title = \"Urgent Tasks\";\n      break;\n\n    case \"appointment\":\n      color = \"aquamarine\";\n      title = \"Appointments\";\n      break;\n\n    default:\n      color = \"beige\";\n      title = type;\n    // textColor = \"white\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: onShow,\n      style: {\n        background: color,\n        color: textColor\n      },\n      children: [title, showShort ? /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(FaArrowDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? tasks.map((task, index) => showShort && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: task.id,\n        index: index,\n        children: [\" \", provided => {\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            children: /*#__PURE__*/_jsxDEV(Task, {\n              task: task,\n              onDelete: onDelete,\n              onToggle: onToggle,\n              onComplete: onComplete\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 23\n          }, this);\n        }]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)) : showShort && /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginLeft: \"30px\"\n      },\n      children: \"No Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/alberthuang/Desktop/task-tracker/src/components/Tasks.js"],"names":["Task","FaArrowUp","FaArrowDown","DragDropContext","Droppable","Draggable","Tasks","tasks","onDelete","onToggle","showShort","onShow","onComplete","type","color","title","textColor","filter","task","completion","background","length","map","index","id","provided","innerRef","draggableProps","dragHandleProps","marginLeft"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,gBAAvC;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,KADa;AAEbC,EAAAA,QAFa;AAGbC,EAAAA,QAHa;AAIbC,EAAAA,SAJa;AAKbC,EAAAA,MALa;AAMbC,EAAAA,UANa;AAObC,EAAAA;AAPa,CAAD,KAQR;AACJ,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAS,GAAG,OAAhB;AACAT,EAAAA,KAAK,GAAGA,KAAK,CAACU,MAAN,CACLC,IAAD,IAAUA,IAAI,CAACL,IAAL,KAAcA,IAAd,IAAsBK,IAAI,CAACC,UAAL,KAAoB,aAD9C,CAAR;;AAGA,UAAQN,IAAR;AACE,SAAK,MAAL;AACEC,MAAAA,KAAK,GAAG,MAAR;AACAC,MAAAA,KAAK,GAAG,mBAAR;AACA;;AACF,SAAK,OAAL;AACED,MAAAA,KAAK,GAAG,KAAR;AACAC,MAAAA,KAAK,GAAG,cAAR;AACA;;AACF,SAAK,aAAL;AACED,MAAAA,KAAK,GAAG,YAAR;AACAC,MAAAA,KAAK,GAAG,cAAR;AACA;;AACF;AACED,MAAAA,KAAK,GAAG,OAAR;AACAC,MAAAA,KAAK,GAAGF,IAAR;AACF;AAhBF;;AAkBA,sBACE;AAAA,4BACE;AAAI,MAAA,OAAO,EAAEF,MAAb;AAAqB,MAAA,KAAK,EAAE;AAAES,QAAAA,UAAU,EAAEN,KAAd;AAAqBA,QAAAA,KAAK,EAAEE;AAA5B,OAA5B;AAAA,iBACGD,KADH,EAEGL,SAAS,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAmB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAF/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMGH,KAAK,CAACc,MAAN,GAAe,CAAf,GACGd,KAAK,CAACe,GAAN,CACE,CAACJ,IAAD,EAAOK,KAAP,KACEb,SAAS,iBACP;AAAA,6BACE,QAAC,SAAD;AAAyB,QAAA,WAAW,EAAEQ,IAAI,CAACM,EAA3C;AAA+C,QAAA,KAAK,EAAED,KAAtD;AAAA,mBACG,GADH,EAEIE,QAAD,IAAc;AACb;AAAA;AACE,YAAA,GAAG,EAAEA,QAAQ,CAACC,QADhB;AAAA,eAEMD,QAAQ,CAACE,cAFf;AAAA,eAGMF,QAAQ,CAACG,eAHf;AAAA,mCAKE,QAAC,IAAD;AAEE,cAAA,IAAI,EAAEV,IAFR;AAGE,cAAA,QAAQ,EAAEV,QAHZ;AAIE,cAAA,QAAQ,EAAEC,QAJZ;AAKE,cAAA,UAAU,EAAEG;AALd,eACOM,IAAI,CAACM,EADZ;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AAaD,SAhBH;AAAA,SAAgBN,IAAI,CAACM,EAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHN,CADH,GA0BGd,SAAS,iBAAI;AAAI,MAAA,KAAK,EAAE;AAAEmB,QAAAA,UAAU,EAAE;AAAd,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CArED;;KAAMvB,K;AAuEN,eAAeA,KAAf","sourcesContent":["import Task from \"./Task\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst Tasks = ({\n  tasks,\n  onDelete,\n  onToggle,\n  showShort,\n  onShow,\n  onComplete,\n  type,\n}) => {\n  let color = \"\";\n  let title = \"\";\n  let textColor = \"black\";\n  tasks = tasks.filter(\n    (task) => task.type === type && task.completion === \"in progress\"\n  );\n  switch (type) {\n    case \"long\":\n      color = \"pink\";\n      title = \"Less Urgent Tasks\";\n      break;\n    case \"short\":\n      color = \"red\";\n      title = \"Urgent Tasks\";\n      break;\n    case \"appointment\":\n      color = \"aquamarine\";\n      title = \"Appointments\";\n      break;\n    default:\n      color = \"beige\";\n      title = type;\n    // textColor = \"white\";\n  }\n  return (\n    <div>\n      <h2 onClick={onShow} style={{ background: color, color: textColor }}>\n        {title}\n        {showShort ? <FaArrowUp /> : <FaArrowDown />}\n      </h2>\n\n      {tasks.length > 0\n        ? tasks.map(\n            (task, index) =>\n              showShort && (\n                <div>\n                  <Draggable key={task.id} draggableId={task.id} index={index}>\n                    {\" \"}\n                    {(provided) => {\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <Task\n                          key={task.id}\n                          task={task}\n                          onDelete={onDelete}\n                          onToggle={onToggle}\n                          onComplete={onComplete}\n                        ></Task>\n                      </div>;\n                    }}\n                  </Draggable>\n                </div>\n              )\n          )\n        : showShort && <h3 style={{ marginLeft: \"30px\" }}>No Tasks</h3>}\n    </div>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}
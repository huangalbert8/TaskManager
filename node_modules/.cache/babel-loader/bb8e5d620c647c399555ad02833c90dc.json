{"ast":null,"code":"var _jsxFileName = \"/Users/alberthuang/Desktop/task-tracker/src/components/Tasks.js\";\nimport Task from \"./Task\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = ({\n  tasks,\n  onDelete,\n  onToggle,\n  showShort,\n  onShow,\n  onComplete,\n  type\n}) => {\n  let color = \"\";\n  let title = \"\";\n  let textColor = \"white\";\n  tasks = tasks.filter(task => task.type === type && task.completion === \"in progress\");\n\n  switch (type) {\n    case \"long\":\n      color = \"pink\";\n      title = \"Less Urgent Tasks\";\n      break;\n\n    case \"short\":\n      color = \"red\";\n      title = \"Urgent Tasks\";\n      break;\n\n    case \"appointment\":\n      color = \"aquamarine\";\n      title = \"Appointments\";\n      break;\n\n    default:\n      color = \"black\";\n      title = type;\n      textColor = \"black\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: onShow,\n      style: {\n        background: color,\n        color: textColor\n      },\n      children: [title, showShort ? /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(FaArrowDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? tasks.map(task => showShort && /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onDelete: onDelete,\n      onToggle: onToggle,\n      onshow: onShow,\n      onComplete: onComplete\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)) : showShort && /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginLeft: \"30px\"\n      },\n      children: \"No Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/alberthuang/Desktop/task-tracker/src/components/Tasks.js"],"names":["Task","FaArrowUp","FaArrowDown","Tasks","tasks","onDelete","onToggle","showShort","onShow","onComplete","type","color","title","textColor","filter","task","completion","background","length","map","id","marginLeft"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,gBAAvC;;;;AACA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,KADa;AAEbC,EAAAA,QAFa;AAGbC,EAAAA,QAHa;AAIbC,EAAAA,SAJa;AAKbC,EAAAA,MALa;AAMbC,EAAAA,UANa;AAObC,EAAAA;AAPa,CAAD,KAQR;AACJ,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAS,GAAG,OAAhB;AACAT,EAAAA,KAAK,GAAGA,KAAK,CAACU,MAAN,CACLC,IAAD,IAAUA,IAAI,CAACL,IAAL,KAAcA,IAAd,IAAsBK,IAAI,CAACC,UAAL,KAAoB,aAD9C,CAAR;;AAGA,UAAQN,IAAR;AACE,SAAK,MAAL;AACEC,MAAAA,KAAK,GAAG,MAAR;AACAC,MAAAA,KAAK,GAAG,mBAAR;AACA;;AACF,SAAK,OAAL;AACED,MAAAA,KAAK,GAAG,KAAR;AACAC,MAAAA,KAAK,GAAG,cAAR;AACA;;AACF,SAAK,aAAL;AACED,MAAAA,KAAK,GAAG,YAAR;AACAC,MAAAA,KAAK,GAAG,cAAR;AACA;;AACF;AACED,MAAAA,KAAK,GAAG,OAAR;AACAC,MAAAA,KAAK,GAAGF,IAAR;AACAG,MAAAA,SAAS,GAAG,OAAZ;AAhBJ;;AAkBA,sBACE;AAAA,4BACE;AAAI,MAAA,OAAO,EAAEL,MAAb;AAAqB,MAAA,KAAK,EAAE;AAAES,QAAAA,UAAU,EAAEN,KAAd;AAAqBA,QAAAA,KAAK,EAAEE;AAA5B,OAA5B;AAAA,iBACGD,KADH,EAEGL,SAAS,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAmB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAF/B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMGH,KAAK,CAACc,MAAN,GAAe,CAAf,GACGd,KAAK,CAACe,GAAN,CACGJ,IAAD,IACER,SAAS,iBACP,QAAC,IAAD;AAEE,MAAA,IAAI,EAAEQ,IAFR;AAGE,MAAA,QAAQ,EAAEV,QAHZ;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,MAAM,EAAEE,MALV;AAME,MAAA,UAAU,EAAEC;AANd,OACOM,IAAI,CAACK,EADZ;AAAA;AAAA;AAAA;AAAA,YAHN,CADH,GAcGb,SAAS,iBAAI;AAAI,MAAA,KAAK,EAAE;AAAEc,QAAAA,UAAU,EAAE;AAAd,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBnB;AAAA,kBADF;AAwBD,CAzDD;;KAAMlB,K;AA2DN,eAAeA,KAAf","sourcesContent":["import Task from \"./Task\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\nconst Tasks = ({\n  tasks,\n  onDelete,\n  onToggle,\n  showShort,\n  onShow,\n  onComplete,\n  type,\n}) => {\n  let color = \"\";\n  let title = \"\";\n  let textColor = \"white\";\n  tasks = tasks.filter(\n    (task) => task.type === type && task.completion === \"in progress\"\n  );\n  switch (type) {\n    case \"long\":\n      color = \"pink\";\n      title = \"Less Urgent Tasks\";\n      break;\n    case \"short\":\n      color = \"red\";\n      title = \"Urgent Tasks\";\n      break;\n    case \"appointment\":\n      color = \"aquamarine\";\n      title = \"Appointments\";\n      break;\n    default:\n      color = \"black\";\n      title = type;\n      textColor = \"black\";\n  }\n  return (\n    <>\n      <h2 onClick={onShow} style={{ background: color, color: textColor }}>\n        {title}\n        {showShort ? <FaArrowUp /> : <FaArrowDown />}\n      </h2>\n\n      {tasks.length > 0\n        ? tasks.map(\n            (task) =>\n              showShort && (\n                <Task\n                  key={task.id}\n                  task={task}\n                  onDelete={onDelete}\n                  onToggle={onToggle}\n                  onshow={onShow}\n                  onComplete={onComplete}\n                ></Task>\n              )\n          )\n        : showShort && <h3 style={{ marginLeft: \"30px\" }}>No Tasks</h3>}\n    </>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}
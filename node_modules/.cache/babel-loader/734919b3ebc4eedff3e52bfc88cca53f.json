{"ast":null,"code":"var _jsxFileName = \"/Users/alberthuang/Desktop/task-tracker/src/components/Tasks.js\";\nimport Task from \"./Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = ({\n  tasks,\n  onDelete,\n  onToggle,\n  onComplete,\n  showApp\n}) => {\n  const shortTasks = [];\n  const appointments = [];\n  const longTasks = [];\n\n  for (let i = 0; i < tasks.length; i++) {\n    switch (tasks[i].type) {\n      case \"short\":\n        shortTasks.push(tasks[i]);\n        break;\n\n      case \"appointment\":\n        shortTasks.push(tasks[i]);\n        break;\n\n      case \"long\":\n        shortTasks.push(tasks[i]);\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: onShow,\n      style: {\n        background: \"red\"\n      },\n      children: [\"Urgent Tasks\", showShort ? /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(FaArrowDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), shortTasks.map(task => task.completion === \"deleted\"( /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onDelete: onDelete,\n      onToggle: onToggle,\n      onComplete: onComplete,\n      show: true\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this))), /*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: onShow,\n      style: {\n        background: \"pink\"\n      },\n      children: [\"Less Urgent Tasks\", showLong ? /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(FaArrowDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), longTasks.map(task => task.completion === \"deleted\" && /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onDelete: onDelete,\n      onToggle: onToggle,\n      onComplete: onComplete\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: onShow,\n      style: {\n        background: \"aquamarine\"\n      },\n      children: [\"Appointments\", showApp ? /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(FaArrowDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), appointments.map(task => task.completion === \"deleted\" && /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onDelete: onDelete,\n      onToggle: onToggle,\n      onComplete: onComplete\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n};\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/alberthuang/Desktop/task-tracker/src/components/Tasks.js"],"names":["Task","Tasks","tasks","onDelete","onToggle","onComplete","showApp","shortTasks","appointments","longTasks","i","length","type","push","onShow","background","showShort","map","task","completion","id","showLong"],"mappings":"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","sourcesContent":["import Task from \"./Task\";\nconst Tasks = ({ tasks, onDelete, onToggle, onComplete, showApp }) => {\n  const shortTasks = [];\n  const appointments = [];\n  const longTasks = [];\n  for (let i = 0; i < tasks.length; i++) {\n    switch (tasks[i].type) {\n      case \"short\":\n        shortTasks.push(tasks[i]);\n        break;\n      case \"appointment\":\n        shortTasks.push(tasks[i]);\n        break;\n      case \"long\":\n        shortTasks.push(tasks[i]);\n        break;\n    }\n  }\n  return (\n    <>\n      <h2 onClick={onShow} style={{ background: \"red\" }}>\n        Urgent Tasks\n        {showShort ? <FaArrowUp /> : <FaArrowDown />}\n      </h2>\n      {shortTasks.map(\n        (task) =>\n          task.completion ===\n          \"deleted\"(\n            <Task\n              key={task.id}\n              task={task}\n              onDelete={onDelete}\n              onToggle={onToggle}\n              onComplete={onComplete}\n              show\n            ></Task>\n          )\n      )}\n      <h2 onClick={onShow} style={{ background: \"pink\" }}>\n        Less Urgent Tasks\n        {showLong ? <FaArrowUp /> : <FaArrowDown />}\n      </h2>\n      {longTasks.map(\n        (task) =>\n          task.completion === \"deleted\" && (\n            <Task\n              key={task.id}\n              task={task}\n              onDelete={onDelete}\n              onToggle={onToggle}\n              onComplete={onComplete}\n            ></Task>\n          )\n      )}\n      <h2 onClick={onShow} style={{ background: \"aquamarine\" }}>\n        Appointments\n        {showApp ? <FaArrowUp /> : <FaArrowDown />}\n      </h2>\n      {appointments.map(\n        (task) =>\n          task.completion === \"deleted\" && (\n            <Task\n              key={task.id}\n              task={task}\n              onDelete={onDelete}\n              onToggle={onToggle}\n              onComplete={onComplete}\n            ></Task>\n          )\n      )}\n    </>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}
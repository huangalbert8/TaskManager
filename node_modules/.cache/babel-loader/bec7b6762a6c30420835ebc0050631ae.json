{"ast":null,"code":"var _jsxFileName = \"/Users/alberthuang/Desktop/task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\n// is not html but jsx(javascript extension)\nimport Header from \"./components/Header\";\nimport AddTask from \"./components/AddTask\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Tasks from \"./components/Tasks\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport CompletedTasks from \"./components/CompletedTasks\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [showShortTasks, setShowShortTasks] = useState(false);\n  const [showLongTasks, setShowLongTasks] = useState(false);\n  const [showAppointments, setShowAppointments] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      const projectsFromServer = await fetchProjects();\n      setTasks(tasksFromServer);\n      setProjects(projectsFromServer);\n    };\n\n    getTasks();\n  }, []); // dependancy array\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:7000/tasks\");\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:7000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchProjects = async () => {\n    const res = await fetch(\"http://localhost:7000/projects\");\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchProject = async id => {\n    const res = await fetch(`http://localhost:7000/project/${id}`);\n    const data = await res.json();\n    return data;\n  }; // const addTask = (task) => {\n  //   const id = Math.floor(Math.random() * 10000) + 1;\n  //   console.log(id);\n  //   const newTask = { id, ...task }; // ...task return the text, day, and reminder of the task passed as arg\n  //   setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n  // };\n\n\n  const addTask = async task => {\n    task.completion = \"in progress\";\n    const res = await fetch(\"http://localhost:7000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // sets tasks to an array with old tasks and new task\n  };\n\n  const deleteTaskPerm = async id => {\n    await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"DELETE\"\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const deleteTask = async id => {\n    const taskToDelete = await fetchTask(id);\n    const updTask = { ...taskToDelete,\n      completion: \"deleted\"\n    };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      completion: data.completion\n    } : task));\n  };\n\n  const completeTask = async id => {\n    const taskToDelete = await fetchTask(id);\n    const updTask = { ...taskToDelete,\n      completion: \"completed\"\n    };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      completion: data.completion\n    } : task));\n  }; //Reminder\n\n\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: data.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Projects, {\n            projects: projects\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n            onAdd: addTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            onDelete: deleteTask,\n            onToggle: toggleReminder,\n            onShow: () => setShowShortTasks(!showShortTasks),\n            showShort: showShortTasks,\n            onComplete: completeTask,\n            type: \"short\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            onDelete: deleteTask,\n            onToggle: toggleReminder,\n            onShow: () => setShowLongTasks(!showLongTasks),\n            showShort: showLongTasks,\n            onComplete: completeTask,\n            type: \"long\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            onDelete: deleteTask,\n            onToggle: toggleReminder,\n            onShow: () => setShowAppointments(!showAppointments),\n            showShort: showAppointments,\n            onComplete: completeTask,\n            type: \"appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/completedTasks\",\n              className: \"button\",\n              children: \"View Completed Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/completedTasks\",\n        children: /*#__PURE__*/_jsxDEV(CompletedTasks, {\n          tasks: tasks,\n          onDelete: deleteTaskPerm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"dQzsbSxq28aRdFN6FIIGrukHX+g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alberthuang/Desktop/task-tracker/src/App.js"],"names":["Header","AddTask","React","useState","useEffect","Tasks","BrowserRouter","Router","Route","CompletedTasks","Link","App","showAddTask","setShowAddTask","showShortTasks","setShowShortTasks","showLongTasks","setShowLongTasks","showAppointments","setShowAppointments","tasks","setTasks","projects","setProjects","getTasks","tasksFromServer","fetchTasks","projectsFromServer","fetchProjects","res","fetch","data","json","fetchTask","id","fetchProject","addTask","task","completion","method","headers","body","JSON","stringify","deleteTaskPerm","filter","deleteTask","taskToDelete","updTask","map","completeTask","toggleReminder","taskToToggle","reminder","props","textAlign"],"mappings":";;;AAAA;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACe,gBAAD,EAAmBC,mBAAnB,IAA0ChB,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,QAAQ,GAAG,YAAY;AAC3B,YAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;AACA,YAAMC,kBAAkB,GAAG,MAAMC,aAAa,EAA9C;AACAP,MAAAA,QAAQ,CAACI,eAAD,CAAR;AACAF,MAAAA,WAAW,CAACI,kBAAD,CAAX;AACD,KALD;;AAMAH,IAAAA,QAAQ;AACT,GARQ,EAQN,EARM,CAAT,CARgB,CAgBR;;AAER,QAAME,UAAU,GAAG,YAAY;AAC7B,UAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD;;AAKA,QAAME,SAAS,GAAG,MAAOC,EAAP,IAAc;AAC9B,UAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8BI,EAAG,EAAnC,CAAvB;AACA,UAAMH,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD;;AAMA,QAAMH,aAAa,GAAG,YAAY;AAChC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD;;AAKA,QAAMI,YAAY,GAAG,MAAOD,EAAP,IAAc;AACjC,UAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,iCAAgCI,EAAG,EAArC,CAAvB;AACA,UAAMH,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD,CAlCgB,CAwChB;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMK,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC9BA,IAAAA,IAAI,CAACC,UAAL,GAAkB,aAAlB;AACA,UAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACrDS,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF4C;AAKrDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAL+C,KAAhC,CAAvB;AAOA,UAAMN,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAX,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWW,IAAX,CAAD,CAAR,CAV8B,CAUF;AAC7B,GAXD;;AAaA,QAAMa,cAAc,GAAG,MAAOV,EAAP,IAAc;AACnC,UAAMJ,KAAK,CAAE,+BAA8BI,EAAG,EAAnC,EAAsC;AAC/CK,MAAAA,MAAM,EAAE;AADuC,KAAtC,CAAX;AAGAlB,IAAAA,QAAQ,CAACD,KAAK,CAACyB,MAAN,CAAcR,IAAD,IAAUA,IAAI,CAACH,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GALD;;AAOA,QAAMY,UAAU,GAAG,MAAOZ,EAAP,IAAc;AAC/B,UAAMa,YAAY,GAAG,MAAMd,SAAS,CAACC,EAAD,CAApC;AACA,UAAMc,OAAO,GAAG,EAAE,GAAGD,YAAL;AAAmBT,MAAAA,UAAU,EAAE;AAA/B,KAAhB;AACA,UAAMT,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8BI,EAAG,EAAnC,EAAsC;AAC3DK,MAAAA,MAAM,EAAE,KADmD;AAE3DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFkD;AAK3DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeK,OAAf;AALqD,KAAtC,CAAvB;AAOA,UAAMjB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAX,IAAAA,QAAQ,CACND,KAAK,CAAC6B,GAAN,CAAWZ,IAAD,IACRA,IAAI,CAACH,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGG,IAAL;AAAWC,MAAAA,UAAU,EAAEP,IAAI,CAACO;AAA5B,KAAjB,GAA4DD,IAD9D,CADM,CAAR;AAKD,GAjBD;;AAkBA,QAAMa,YAAY,GAAG,MAAOhB,EAAP,IAAc;AACjC,UAAMa,YAAY,GAAG,MAAMd,SAAS,CAACC,EAAD,CAApC;AACA,UAAMc,OAAO,GAAG,EAAE,GAAGD,YAAL;AAAmBT,MAAAA,UAAU,EAAE;AAA/B,KAAhB;AACA,UAAMT,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8BI,EAAG,EAAnC,EAAsC;AAC3DK,MAAAA,MAAM,EAAE,KADmD;AAE3DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFkD;AAK3DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeK,OAAf;AALqD,KAAtC,CAAvB;AAOA,UAAMjB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAX,IAAAA,QAAQ,CACND,KAAK,CAAC6B,GAAN,CAAWZ,IAAD,IACRA,IAAI,CAACH,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGG,IAAL;AAAWC,MAAAA,UAAU,EAAEP,IAAI,CAACO;AAA5B,KAAjB,GAA4DD,IAD9D,CADM,CAAR;AAKD,GAjBD,CArFgB,CAwGhB;;;AAEA,QAAMc,cAAc,GAAG,MAAOjB,EAAP,IAAc;AACnC,UAAMkB,YAAY,GAAG,MAAMnB,SAAS,CAACC,EAAD,CAApC;AACA,UAAMc,OAAO,GAAG,EAAE,GAAGI,YAAL;AAAmBC,MAAAA,QAAQ,EAAE,CAACD,YAAY,CAACC;AAA3C,KAAhB;AACA,UAAMxB,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8BI,EAAG,EAAnC,EAAsC;AAC3DK,MAAAA,MAAM,EAAE,KADmD;AAE3DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFkD;AAK3DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeK,OAAf;AALqD,KAAtC,CAAvB;AAOA,UAAMjB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAX,IAAAA,QAAQ,CACND,KAAK,CAAC6B,GAAN,CAAWZ,IAAD,IACRA,IAAI,CAACH,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGG,IAAL;AAAWgB,MAAAA,QAAQ,EAAEtB,IAAI,CAACsB;AAA1B,KAAjB,GAAwDhB,IAD1D,CADM,CAAR;AAKD,GAjBD;;AAkBA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE,MAAMxB,cAAc,CAAC,CAACD,WAAF,CAD7B;AAEE,QAAA,OAAO,EAAEA;AAFX;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,MAAM,EAAG0C,KAAD,iBACN;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAEhC;AAApB;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGV,WAAW,iBAAI,QAAC,OAAD;AAAS,YAAA,KAAK,EAAEwB;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAFlB,eAGE,QAAC,KAAD;AACE,YAAA,KAAK,EAAEhB,KADT;AAEE,YAAA,QAAQ,EAAE0B,UAFZ;AAGE,YAAA,QAAQ,EAAEK,cAHZ;AAIE,YAAA,MAAM,EAAE,MAAMpC,iBAAiB,CAAC,CAACD,cAAF,CAJjC;AAKE,YAAA,SAAS,EAAEA,cALb;AAME,YAAA,UAAU,EAAEoC,YANd;AAOE,YAAA,IAAI,EAAE;AAPR;AAAA;AAAA;AAAA;AAAA,kBAHF,eAYE,QAAC,KAAD;AACE,YAAA,KAAK,EAAE9B,KADT;AAEE,YAAA,QAAQ,EAAE0B,UAFZ;AAGE,YAAA,QAAQ,EAAEK,cAHZ;AAIE,YAAA,MAAM,EAAE,MAAMlC,gBAAgB,CAAC,CAACD,aAAF,CAJhC;AAKE,YAAA,SAAS,EAAEA,aALb;AAME,YAAA,UAAU,EAAEkC,YANd;AAOE,YAAA,IAAI,EAAE;AAPR;AAAA;AAAA;AAAA;AAAA,kBAZF,eAqBE,QAAC,KAAD;AACE,YAAA,KAAK,EAAE9B,KADT;AAEE,YAAA,QAAQ,EAAE0B,UAFZ;AAGE,YAAA,QAAQ,EAAEK,cAHZ;AAIE,YAAA,MAAM,EAAE,MAAMhC,mBAAmB,CAAC,CAACD,gBAAF,CAJnC;AAKE,YAAA,SAAS,EAAEA,gBALb;AAME,YAAA,UAAU,EAAEgC,YANd;AAOE,YAAA,IAAI,EAAE;AAPR;AAAA;AAAA;AAAA;AAAA,kBArBF,eA8BE;AAAK,YAAA,KAAK,EAAE;AAAEK,cAAAA,SAAS,EAAE;AAAb,aAAZ;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,iBAAT;AAA2B,cAAA,SAAS,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA9BF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cAVF,eAqDE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,iBAAZ;AAAA,+BACE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAEnC,KAAvB;AAA8B,UAAA,QAAQ,EAAEwB;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD,CAzLD;;GAAMjC,G;;KAAAA,G;AA2LN,eAAeA,GAAf","sourcesContent":["// is not html but jsx(javascript extension)\nimport Header from \"./components/Header\";\nimport AddTask from \"./components/AddTask\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Tasks from \"./components/Tasks\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport CompletedTasks from \"./components/CompletedTasks\";\nimport { Link } from \"react-router-dom\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [showShortTasks, setShowShortTasks] = useState(false);\n  const [showLongTasks, setShowLongTasks] = useState(false);\n  const [showAppointments, setShowAppointments] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      const projectsFromServer = await fetchProjects();\n      setTasks(tasksFromServer);\n      setProjects(projectsFromServer);\n    };\n    getTasks();\n  }, []); // dependancy array\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:7000/tasks\");\n    const data = await res.json();\n    return data;\n  };\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:7000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchProjects = async () => {\n    const res = await fetch(\"http://localhost:7000/projects\");\n    const data = await res.json();\n    return data;\n  };\n  const fetchProject = async (id) => {\n    const res = await fetch(`http://localhost:7000/project/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  // const addTask = (task) => {\n  //   const id = Math.floor(Math.random() * 10000) + 1;\n  //   console.log(id);\n  //   const newTask = { id, ...task }; // ...task return the text, day, and reminder of the task passed as arg\n  //   setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n  // };\n\n  const addTask = async (task) => {\n    task.completion = \"in progress\";\n    const res = await fetch(\"http://localhost:7000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // sets tasks to an array with old tasks and new task\n  };\n\n  const deleteTaskPerm = async (id) => {\n    await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const deleteTask = async (id) => {\n    const taskToDelete = await fetchTask(id);\n    const updTask = { ...taskToDelete, completion: \"deleted\" };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completion: data.completion } : task\n      )\n    );\n  };\n  const completeTask = async (id) => {\n    const taskToDelete = await fetchTask(id);\n    const updTask = { ...taskToDelete, completion: \"completed\" };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completion: data.completion } : task\n      )\n    );\n  };\n\n  //Reminder\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n        {/* {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks\"\n      )} */}\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <>\n              <Projects projects={projects}></Projects>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              <Tasks\n                tasks={tasks}\n                onDelete={deleteTask}\n                onToggle={toggleReminder}\n                onShow={() => setShowShortTasks(!showShortTasks)}\n                showShort={showShortTasks}\n                onComplete={completeTask}\n                type={\"short\"}\n              />\n              <Tasks\n                tasks={tasks}\n                onDelete={deleteTask}\n                onToggle={toggleReminder}\n                onShow={() => setShowLongTasks(!showLongTasks)}\n                showShort={showLongTasks}\n                onComplete={completeTask}\n                type={\"long\"}\n              />\n              <Tasks\n                tasks={tasks}\n                onDelete={deleteTask}\n                onToggle={toggleReminder}\n                onShow={() => setShowAppointments(!showAppointments)}\n                showShort={showAppointments}\n                onComplete={completeTask}\n                type={\"appointment\"}\n              />\n              <div style={{ textAlign: \"center\" }}>\n                <Link to=\"/completedTasks\" className=\"button\">\n                  View Completed Tasks\n                </Link>\n              </div>\n            </>\n          )}\n        />\n\n        <Route path=\"/completedTasks\">\n          <CompletedTasks tasks={tasks} onDelete={deleteTaskPerm} />\n        </Route>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/alberthuang/Desktop/task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\n// is not html but jsx(javascript extension)\nimport Header from \"./components/Header\";\nimport AddTask from \"./components/AddTask\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport ShortTasks from \"./components/ShortTasks\";\nimport LongTasks from \"./components/LongTasks\";\nimport Appointments from \"./components/Appointments\";\nimport Tasks from \"./components/Tasks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [showShortTasks, setShowShortTasks] = useState(true);\n  const [showLongTasks, setShowLongTasks] = useState(true);\n  const [showAppointments, setShowAppointments] = useState(true);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // dependancy array\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:7000/tasks\");\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:7000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; // const addTask = (task) => {\n  //   const id = Math.floor(Math.random() * 10000) + 1;\n  //   console.log(id);\n  //   const newTask = { id, ...task }; // ...task return the text, day, and reminder of the task passed as arg\n  //   setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n  // };\n\n\n  const addTask = async task => {\n    const res = await fetch(\"http://localhost:7000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // sets tasks to an array with old tasks and new task\n  }; // const deleteTask = (id) => {\n  //   setTasks(tasks.filter((task) => task.id !== id));\n  // };\n\n\n  const deleteTask = async id => {\n    const taskToDelete = await fetchTask(id);\n    const updTask = { ...taskToDelete,\n      completion: \"deleted\"\n    };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      completion: data.completion\n    } : task));\n  };\n\n  const completeTask = async id => {\n    const taskToDelete = await fetchTask(id);\n    const updTask = { ...taskToDelete,\n      completion: \"deleted\"\n    };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      completion: data.completion\n    } : task));\n  }; //Reminder\n\n\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: data.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder,\n      onShow: () => setShowShortTasks(!showShortTasks),\n      showShort: showShortTasks,\n      onComplete: completeTask,\n      type: \"short\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder,\n      onShow: () => setShowShortTasks(!showShortTasks),\n      showShort: showShortTasks,\n      onComplete: completeTask,\n      type: \"long\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder,\n      onShow: () => setShowShortTasks(!showShortTasks),\n      showShort: showShortTasks,\n      onComplete: completeTask,\n      type: \"in progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"0n3jadplqCVxXinoqpDslNpJFfY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alberthuang/Desktop/task-tracker/src/App.js"],"names":["Header","AddTask","React","useState","useEffect","ShortTasks","LongTasks","Appointments","Tasks","App","showAddTask","setShowAddTask","showShortTasks","setShowShortTasks","showLongTasks","setShowLongTasks","showAppointments","setShowAppointments","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","taskToDelete","updTask","completion","map","completeTask","toggleReminder","taskToToggle","reminder"],"mappings":"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","sourcesContent":["// is not html but jsx(javascript extension)\nimport Header from \"./components/Header\";\nimport AddTask from \"./components/AddTask\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport ShortTasks from \"./components/ShortTasks\";\nimport LongTasks from \"./components/LongTasks\";\nimport Appointments from \"./components/Appointments\";\nimport Tasks from \"./components/Tasks\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [showShortTasks, setShowShortTasks] = useState(true);\n  const [showLongTasks, setShowLongTasks] = useState(true);\n  const [showAppointments, setShowAppointments] = useState(true);\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []); // dependancy array\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:7000/tasks\");\n    const data = await res.json();\n    return data;\n  };\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:7000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  // const addTask = (task) => {\n  //   const id = Math.floor(Math.random() * 10000) + 1;\n  //   console.log(id);\n  //   const newTask = { id, ...task }; // ...task return the text, day, and reminder of the task passed as arg\n  //   setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n  // };\n\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:7000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // sets tasks to an array with old tasks and new task\n  };\n\n  // const deleteTask = (id) => {\n  //   setTasks(tasks.filter((task) => task.id !== id));\n  // };\n  const deleteTask = async (id) => {\n    const taskToDelete = await fetchTask(id);\n    const updTask = { ...taskToDelete, completion: \"deleted\" };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completion: data.completion } : task\n      )\n    );\n  };\n  const completeTask = async (id) => {\n    const taskToDelete = await fetchTask(id);\n    const updTask = { ...taskToDelete, completion: \"deleted\" };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, completion: data.completion } : task\n      )\n    );\n  };\n\n  //Reminder\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    const res = await fetch(`http://localhost:7000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {/* {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks\"\n      )} */}\n      <Tasks\n        tasks={tasks}\n        onDelete={deleteTask}\n        onToggle={toggleReminder}\n        onShow={() => setShowShortTasks(!showShortTasks)}\n        showShort={showShortTasks}\n        onComplete={completeTask}\n        type={\"short\"}\n      />\n      <Tasks\n        tasks={tasks}\n        onDelete={deleteTask}\n        onToggle={toggleReminder}\n        onShow={() => setShowShortTasks(!showShortTasks)}\n        showShort={showShortTasks}\n        onComplete={completeTask}\n        type={\"long\"}\n      />\n      <Tasks\n        tasks={tasks}\n        onDelete={deleteTask}\n        onToggle={toggleReminder}\n        onShow={() => setShowShortTasks(!showShortTasks)}\n        showShort={showShortTasks}\n        onComplete={completeTask}\n        type={\"in progress\"}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","console","log","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAGMA,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7B,OACE,wBACEC,MAAO,CAAEC,gBAAiBJ,GAC1BK,UAAU,MACVH,QAASA,EAHX,SAKGD,KAKPF,EAAOO,aAAe,CACpBN,MAAO,OAQMD,QCpBTQ,EAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC9B,OACE,yBAAQL,UAAU,SAAlB,UACE,6BAAKG,IACL,cAAC,EAAD,CACER,MAAOU,EAAU,MAAQ,QACzBT,KAAMS,EAAU,QAAU,MAC1BR,QAASO,QAMjBF,EAAOD,aAAe,CACpBE,MAAO,gBAMMD,Q,OCRAI,EAfF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9B,OACE,sBACET,UAAS,eAAUO,EAAKG,SAAW,WAAa,IAChDC,cAAe,kBAAMF,EAASF,EAAKK,KAFrC,UAIE,+BACGL,EAAKX,KAAM,IACZ,cAAC,IAAD,CAASE,MAAO,CAAEH,MAAO,OAASE,QAAS,kBAAMW,EAASD,EAAKK,UAEjE,4BAAIL,EAAKM,UCKAC,EAfD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOP,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAChC,OACE,mCACGM,EAAMC,KAAI,SAACT,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,SAAUA,EACVC,SAAUA,GAHLF,EAAKK,UC+CLK,EAnDC,SAAC,GAAe,IAAbb,EAAY,EAAZA,MACjB,EAAwBc,mBAAS,IAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAAsBD,mBAAS,IAA/B,mBAAOL,EAAP,KAAYO,EAAZ,KACA,EAAgCF,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBW,EAAjB,KAcA,OACE,uBAAMrB,UAAU,WAAWsB,SAbZ,SAACC,GAChBA,EAAEC,iBAEG5B,GAILQ,EAAM,CAAER,OAAMiB,MAAKH,aACnBS,EAAQ,IACRC,EAAO,IACPC,GAAY,IANVI,MAAM,uBASR,UACE,sBAAKzB,UAAU,eAAf,UACE,yCACA,uBACE0B,KAAK,OACLC,YAAY,WACZC,MAAOhC,EACPiC,SAAU,SAACN,GAAD,OAAOJ,EAAQI,EAAEO,OAAOF,aAGtC,sBAAK5B,UAAU,eAAf,UACE,iDACA,uBACE0B,KAAK,OACLC,YAAY,mBACZC,MAAOf,EACPgB,SAAU,SAACN,GAAD,OAAOH,EAAOG,EAAEO,OAAOF,aAGrC,sBAAK5B,UAAU,qBAAf,UACE,iDACA,uBACE0B,KAAK,WACLK,QAASrB,EACTkB,MAAOlB,EACPmB,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAEO,OAAOF,aAG1C,uBAAOF,KAAK,SAASE,MAAM,YAAY5B,UAAU,sBCMxCgC,EA/CH,WACV,MAAsCd,oBAAS,GAA/C,mBAAOe,EAAP,KAAoBC,EAApB,KACA,EAA0BhB,mBAAS,IAAnC,mBAAOH,EAAP,KAAcoB,EAAd,KA6BA,OACE,sBAAKnC,UAAU,YAAf,UACE,cAAC,EAAD,CACEI,MAAO,kBAAM8B,GAAgBD,IAC7B5B,QAAS4B,IAEVA,GAAe,cAAC,EAAD,CAAS7B,MA1Bb,SAACG,GACf,IAAMK,EAAKwB,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EAC/CC,QAAQC,IAAI5B,GACZ,IAAM6B,EAAO,aAAK7B,MAAOL,GACzB4B,EAAS,GAAD,mBAAKpB,GAAL,CAAY0B,QAuBjB1B,EAAM2B,OAAS,EACd,cAAC,EAAD,CAAO3B,MAAOA,EAAOP,SArBR,SAACI,GAClBuB,EAASpB,EAAM4B,QAAO,SAACpC,GAAD,OAAUA,EAAKK,KAAOA,OAoBGH,SAf1B,SAACG,GACtBuB,EACEpB,EAAMC,KAAI,SAACT,GAAD,OACRA,EAAKK,KAAOA,EAAZ,2BAAsBL,GAAtB,IAA4BG,UAAWH,EAAKG,WAAaH,SAczD,eCpCOqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.557757fa.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      style={{ backgroundColor: color }}\n      className=\"btn\"\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  color: \"red\",\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Button;\n","//rafce creates a component with arrow functions\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      <Button\n        color={showAdd ? \"red\" : \"green\"}\n        text={showAdd ? \"Close\" : \"Add\"}\n        onClick={onAdd}\n      />\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Task Manager\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired, // makes sure title prop is a string\n};\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`} // if task.reminder true then classname = task.reminder else classname = task\n      onDoubleClick={() => onToggle(task.id)}\n    >\n      <h3>\n        {task.text}{\" \"}\n        <FaTimes style={{ color: \"red\" }} onClick={() => onDelete(task.id)} />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task\n          key={task.id}\n          task={task}\n          onDelete={onDelete}\n          onToggle={onToggle}\n        ></Task>\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!text) {\n      alert(\"Please add a task.\");\n      return;\n    }\n    onAdd({ text, day, reminder });\n    setText(\"\");\n    setDay(\"\");\n    setReminder(false);\n  };\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        ></input>\n      </div>\n      <div className=\"form-control\">\n        <label>Day and Time</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day and TIme\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        ></input>\n      </div>\n      <div className=\"form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.target.value)}\n        ></input>\n      </div>\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\"></input>\n    </form>\n  );\n};\n\nexport default AddTask;\n","// is not html but jsx(javascript extension)\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  // const addTask = (task) => {\n  //   const id = Math.floor(Math.random() * 10000) + 1;\n  //   console.log(id);\n  //   const newTask = { id, ...task }; // ...task return the text, day, and reminder of the task passed as arg\n  //   setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n  // };\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    console.log(id);\n    const newTask = { id, ...task }; // ...task return the text, day, and reminder of the task passed as arg\n    setTasks([...tasks, newTask]); // sets tasks to an array with old tasks and new task\n  };\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //Reminder\n\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//npx create-react-app name-of-file\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}